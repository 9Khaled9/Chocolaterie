// <auto-generated />
using Chocolaterie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chocolaterie.Migrations
{
    [DbContext(typeof(ChocolaterieContext))]
    [Migration("20230413084928_AllEntitiesRelationships_IsDeleted_ContactInfo_SeedData")]
    partial class AllEntitiesRelationships_IsDeleted_ContactInfo_SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chocolaterie.Entities.ChocolateBar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("ChocolateBars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "SPRING BALLOTIN 1/4 LB 10 PCS",
                            FactoryId = 1,
                            IsDeleted = false,
                            Name = "SPRING BALLOTIN 1/4 LB 10 PCS",
                            Price = 24.899999999999999
                        },
                        new
                        {
                            Id = 2,
                            Description = "CLASSIC BALLOTIN 0.25 LB",
                            FactoryId = 1,
                            IsDeleted = false,
                            Name = "CLASSIC BALLOTIN 0.25 LB",
                            Price = 24.899999999999999
                        },
                        new
                        {
                            Id = 3,
                            Description = "LOVE BALLOTIN 1 LB",
                            FactoryId = 1,
                            IsDeleted = false,
                            Name = "LOVE BALLOTIN 1 LB",
                            Price = 78.900000000000006
                        },
                        new
                        {
                            Id = 4,
                            Description = "Gandour Digestive Chocolate Biscuits are sprinkled with chocolate chips, which is also its most prominent distinguishing ingredient.",
                            FactoryId = 2,
                            IsDeleted = false,
                            Name = "Digestive",
                            Price = 18.5
                        },
                        new
                        {
                            Id = 5,
                            Description = "Creamy Hazelnut",
                            FactoryId = 2,
                            IsDeleted = false,
                            Name = "Unica",
                            Price = 10.5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Chewy Caramel",
                            FactoryId = 2,
                            IsDeleted = false,
                            Name = "Pik-One",
                            Price = 10.5
                        },
                        new
                        {
                            Id = 7,
                            Description = "Torku Classic Chocolate Series (Dark Chocolate (60% Cacao )",
                            FactoryId = 3,
                            IsDeleted = false,
                            Name = "Bitter Cikolata",
                            Price = 56.0
                        },
                        new
                        {
                            Id = 8,
                            Description = "White Chocolate With Cocoa Hazelnut Cream Filling",
                            FactoryId = 3,
                            IsDeleted = false,
                            Name = "Gold",
                            Price = 28.5
                        },
                        new
                        {
                            Id = 9,
                            Description = "Torku Çokofest Caramel Filled Milk Chocolate 60 gr",
                            FactoryId = 3,
                            IsDeleted = false,
                            Name = "Çokofest",
                            Price = 55.899999999999999
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            Contact = "",
                            Description = "Hoz Market",
                            Email = "",
                            IsDeleted = false,
                            Name = "Hoz Market"
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            Contact = "",
                            Description = "spinneys",
                            Email = "",
                            IsDeleted = false,
                            Name = "spinneys"
                        },
                        new
                        {
                            Id = 3,
                            Address = "",
                            Contact = "",
                            Description = "mcdonald's",
                            Email = "",
                            IsDeleted = false,
                            Name = "mcdonald's"
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A 10% discount is applied above 10 chocolate bars",
                            IsDeleted = false,
                            Percentage = 10.0,
                            Title = "discount 10%"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A 20% discount is applied above 20 chocolate bars",
                            IsDeleted = false,
                            Percentage = 20.0,
                            Title = "discount 20%"
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Factories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            Contact = "",
                            Email = "",
                            IsDeleted = false,
                            Name = "Neuhaus"
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            Contact = "",
                            Email = "",
                            IsDeleted = false,
                            Name = "Ghandour"
                        },
                        new
                        {
                            Id = 3,
                            Address = "",
                            Contact = "",
                            Email = "",
                            IsDeleted = false,
                            Name = "Torku"
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalAfterDiscount")
                        .HasColumnType("int");

                    b.Property<int>("WholeSalerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("WholeSalerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Chocolaterie.Entities.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("StockId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChocolateBarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quatity")
                        .HasColumnType("int");

                    b.Property<int>("WholeSalerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChocolateBarId");

                    b.HasIndex("WholeSalerId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChocolateBarId = 1,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChocolateBarId = 2,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 3,
                            ChocolateBarId = 3,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 4,
                            ChocolateBarId = 4,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 5,
                            ChocolateBarId = 5,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 6,
                            ChocolateBarId = 6,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 7,
                            ChocolateBarId = 7,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 8,
                            ChocolateBarId = 8,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 9,
                            ChocolateBarId = 9,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 1
                        },
                        new
                        {
                            Id = 10,
                            ChocolateBarId = 1,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 11,
                            ChocolateBarId = 2,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 12,
                            ChocolateBarId = 3,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 13,
                            ChocolateBarId = 4,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 14,
                            ChocolateBarId = 5,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 15,
                            ChocolateBarId = 6,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 2
                        },
                        new
                        {
                            Id = 16,
                            ChocolateBarId = 7,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 3
                        },
                        new
                        {
                            Id = 17,
                            ChocolateBarId = 8,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 3
                        },
                        new
                        {
                            Id = 18,
                            ChocolateBarId = 9,
                            Description = "",
                            IsDeleted = false,
                            Quatity = 50,
                            WholeSalerId = 3
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.WholeSaler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WholeSalers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "RUE DE LA PRINCESSE, 7100 TRIVIÈRES, BELGIUM",
                            Contact = "+32 472 08 77 16",
                            Description = "SOUTH EXPORT ALLIANCE - Produits alimentaires et non alimentaires asiatiques authentiques",
                            Email = "info@sealliance.be",
                            IsDeleted = false,
                            Name = "SEA"
                        },
                        new
                        {
                            Id = 2,
                            Address = "MEGAFORM AG - Rue Haute, 177 - 4700 EUPEN Belgium",
                            Contact = "+32 87 32 17 18",
                            Description = "MEGAFORM - Innovative and educational products for physical education distributors",
                            Email = "info@megaform.com",
                            IsDeleted = false,
                            Name = "MEGAFORM"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kwikaard 104 - 2980 Zoersel - Belgium",
                            Contact = "+32 (0)3 385 58 28",
                            Description = "AFRIMEX BELGIUM - For those who choose quality",
                            Email = "info@afrimex.be",
                            IsDeleted = false,
                            Name = "AFRIMEX BELGIUM"
                        });
                });

            modelBuilder.Entity("Chocolaterie.Entities.ChocolateBar", b =>
                {
                    b.HasOne("Chocolaterie.Entities.Factory", "Factory")
                        .WithMany("ChocolateBars")
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Order", b =>
                {
                    b.HasOne("Chocolaterie.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chocolaterie.Entities.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chocolaterie.Entities.WholeSaler", "WholeSaler")
                        .WithMany("Orders")
                        .HasForeignKey("WholeSalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Discount");

                    b.Navigation("WholeSaler");
                });

            modelBuilder.Entity("Chocolaterie.Entities.OrderLine", b =>
                {
                    b.HasOne("Chocolaterie.Entities.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chocolaterie.Entities.Stock", "Stock")
                        .WithMany("OrderLines")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Stock", b =>
                {
                    b.HasOne("Chocolaterie.Entities.ChocolateBar", "ChocolateBar")
                        .WithMany("Stocks")
                        .HasForeignKey("ChocolateBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chocolaterie.Entities.WholeSaler", "WholeSaler")
                        .WithMany("Stocks")
                        .HasForeignKey("WholeSalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChocolateBar");

                    b.Navigation("WholeSaler");
                });

            modelBuilder.Entity("Chocolaterie.Entities.ChocolateBar", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Discount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Factory", b =>
                {
                    b.Navigation("ChocolateBars");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Chocolaterie.Entities.Stock", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Chocolaterie.Entities.WholeSaler", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
